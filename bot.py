import sqlite3
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes

def init_db():
    conn = sqlite3.connect("kartasheva.db")
    c = conn.cursor()
    c.execute("CREATE TABLE IF NOT EXISTS settings (user_id TEXT, theme TEXT DEFAULT 'light', PRIMARY KEY (user_id))")
    conn.commit()
    conn.close()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    channel_id = "-1002203758947"
    try:
        member = await context.bot.get_chat_member(channel_id, user_id)
        if member.status in ["member", "administrator", "creator"]:
            await update.message.reply_text("üñ§ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ú–∞—Ä–∏–∏ –ö–∞—Ä—Ç–∞—à–µ–≤–æ–π! –ù–∞–ø–∏—à–∏ /read, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —á–∏—Ç–∞–ª–∫—É!")
        else:
            await update.message.reply_text("–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –ß–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–ª—É–± –ú–∞—Ä–∏–∏ –ö–∞—Ä—Ç–∞—à–µ–≤–æ–π, —á—Ç–æ–±—ã —á–∏—Ç–∞—Ç—å.")
    except:
        await update.message.reply_text("–û—à–∏–±–∫–∞. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –≤ –∫–∞–Ω–∞–ª–µ.")

async def read_book(update: Update, context: ContextTypes.DEFAULT_TYPE):
    base_url = "https://mkfictionapi.github.io/mkfiction"
    keyboard = [[InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å —á–∏—Ç–∞–ª–∫—É", web_app=WebAppInfo(url=base_url))]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ù–∞–∂–º–∏, —á—Ç–æ–±—ã —á–∏—Ç–∞—Ç—å:", reply_markup=reply_markup)

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update and update.message:
        await update.message.reply_text("–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /start.")
    print(f"–û—à–∏–±–∫–∞: {context.error}")

def main():
    app = Application.builder().token("7706583055:AAEllWzqSkP6WS1R1QgQSuBXc-0IFknZylw").build()  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("read", read_book))
    app.add_error_handler(error_handler)
    app.run_polling()

if __name__ == "__main__":
    main()